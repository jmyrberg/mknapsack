name: Upload distribution to PyPi

on:
  release:
    types: [published]

jobs:
  build-and-release:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
      - name: Build and upload distribution to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build --sdist --outdir dist/ .
          twine upload dist/*

  tag:
    name: Tag release with latest
    needs: [build-and-release]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Advance latest tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}          
          script: |
            try {
              console.log("Trying to delete existing 'latest' tag...")
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/latest"
              })
              console.log("Deleted existing tag!")
            } catch (e) {
              console.log("The tag doesn't exist yet: " + e)
            }
            console.log("Tagging commit '" + context.sha + "' with 'latest'...")
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/latest",
              sha: context.sha
            })
            console.log("Tagging done!")
